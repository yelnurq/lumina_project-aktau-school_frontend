import { useState } from 'react';
import styles from './MetaPreviewer.module.css';

const demoHTML = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta property="og:title" content="Yoda ‚Äî Your Own Data Access">
  <meta property="og:description" content="–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ dev-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏: —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã, –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã, –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã. –í—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.">
  <meta property="og:image" content="https://via.placeholder.com/600x300.png?text=Yoda+Preview">
  <meta property="og:url" content="https://yoda.tools">
  
  <meta name="twitter:title" content="Yoda ‚Äî Dev Tools –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤">
  <meta name="twitter:description" content="–†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞, color picker, –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–∏–ø–ª–æ–º–æ–≤, –ø—Ä–µ–≤—å—é meta –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.">
  <meta name="twitter:image" content="https://via.placeholder.com/600x300.png?text=Yoda+Twitter">
</head>
</html>
`;

export default function MetaPreviewer() {
  const [htmlInput, setHtmlInput] = useState('');
  const [metaData, setMetaData] = useState(null);

  const parseMetaTags = () => {
    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlInput, 'text/html');
    const metaTags = Array.from(doc.getElementsByTagName('meta'));

    const data = {};
    metaTags.forEach(tag => {
      const property = tag.getAttribute('property') || tag.getAttribute('name');
      const content = tag.getAttribute('content');
      if (property && content) {
        data[property] = content;
      }
    });

    setMetaData(data);
  };

  const loadDemo = () => {
    setHtmlInput(demoHTML);
    setMetaData(null);
  };

  return (
    <div className={styles.wrapper}>
      <div className={styles.buttons}>
        <button onClick={parseMetaTags} className={styles.button}>
          üîç –ü–∞—Ä—Å–∏—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–≤—å—é
        </button>
        <button onClick={loadDemo} className={styles.buttonSecondary}>
          üß™ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä
        </button>
      </div>

      <textarea
        placeholder="–í—Å—Ç–∞–≤—å HTML —Å <meta> —Ç–µ–≥–∞–º–∏..."
        className={styles.textarea}
        value={htmlInput}
        onChange={(e) => setHtmlInput(e.target.value)}
      />

      {metaData && (
        <div className={styles.previewCard}>
          <img src={metaData['og:image'] || metaData['twitter:image']} alt="" />
          <div className={styles.texts}>
            <div className={styles.domain}>
              {metaData['og:url'] || 'example.com'}
            </div>
            <div className={styles.title}>
              {metaData['og:title'] || metaData['twitter:title'] || '–ó–∞–≥–æ–ª–æ–≤–æ–∫'}
            </div>
            <div className={styles.desc}>
              {metaData['og:description'] || metaData['twitter:description'] || '–û–ø–∏—Å–∞–Ω–∏–µ'}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
